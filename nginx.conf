user nginx nginx;                                             #配置用户或者组
worker_processes 4;                            #设置子进程数，设置为自动，根据CPU核数确定
worker_rlimit_nofile 65535;                       #与ulimit -n 的值保持一致
events
{
        multi_accept on;                              #设置一个进程是否同时接受多个网络连接，默认为off
        use epoll;                                    #高性能网络I/O模型，不用管
        worker_connections 65535;                     #单个进程最大连接数（最大连接数=连接数*进程数），与ulimit -n 的值一致即可
}

http{
    #基本设置
        server_tokens off;                            #关闭在错误页面中的nginx版本数字
        sendfile on;                                  #进行下载等应用磁盘IO重负载应用，可设置为 off
        underscores_in_headers on;                    #开启支持下划线的header
        include       mime.types;                     #调用样式
        default_type application/json;

        #日志设置
        error_log /var/log/nginx/error.log crit;    #记录严重的错误，注意修改路径
        log_format access escape=json '$remote_addr - $server_port - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" $request_body '
        '"$http_host" "$http_user_agent" $http_x_forwarded_for "$request_time" $upstream_addr';
        access_log /var/log/nginx/access.log access;#记录访问日志，上面为日志访问格式

        #服务代理配置
        include       conf.d/*.conf;
}
